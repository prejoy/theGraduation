//fatfs test part  0
  uint8_t res;
  uint32_t total,free;
  //不挂载 w25q,以免破坏字库文件 f_mount(fs[1],"1:",1);
  FTL_Init();	//这个可以不用，在挂载的时候fatfs又调用了一次FTL_init
  exfuns_init();	//为FATFS申请内存
  res=f_mount(fs[2],"2:",1);	//0:SD卡  1：W25QXX Flash 2：Nand Flash
  if(res==0X0D)
  {
//	LCD_ShowString(30,150,200,16,16,"NAND Disk Formatting...");
	printf("NAND Disk Formatting...\r\n");
	res=f_mkfs("2:",1,4096);
	if(res==0)
	{
		f_setlabel((const TCHAR *)"2:NANDDISK");
//		LCD_ShowString(30,150,200,16,16,"NAND Disk Format Finish");
		printf("NAND Disk Format Finish\r\n");
	}else //LCD_ShowString(30,150,200,16,16,"NAND Disk Format Error ");
	  printf("NAND Disk Format Error \r\n");
//	delay_ms(1000);
  }
//  LCD_Fill(30,150,240,150+16,WHITE);
  while(exf_getfree("2:",&total,&free))
  {
//	LCD_ShowString(30,150,200,16,16,"SD Card Fatfs Error!");
	printf("SD Card Fatfs Error!\r\n");
	delay_ms(200);
//	LCD_Fill(30,150,240,150+16,WHITE);
//	delay_ms(200);
  }
//  POINT_COLOR=BLUE;
//  LCD_ShowString(30,150,200,16,16,"FATFS OK!");
//  LCD_ShowString(30,170,200,16,16,"Flash Total Size:     MB");
//  LCD_ShowString(30,190,200,16,16,"Flash Free  Size:     MB");
//  LCD_ShowNum(30+8*14,170,total>>10,5,16);
//  LCD_ShowNum(30+8*14,190,free>>10,5,16);

=========================================================================================
//fatfs test part   1
  uint8_t res;
  uint32_t total,free;
  exfuns_init();	//为FATFS申请内存
  res=f_mount(fs[2],"2:",1);	//0:SD卡  1：W25QXX Flash 2：Nand Flash
  if(res==0X0D)
  {
	printf("NAND Disk Formatting...\r\n");
	res=f_mkfs("2:",1,4096);
	if(res==0)
	{
		f_setlabel((const TCHAR *)"2:NANDDISK");
		printf("NAND Disk Format Finish\r\n");
	}else  printf("NAND Disk Format Error \r\n");
  }
  while(exf_getfree("2:",&total,&free))
  {
	printf("Nand Flash Fatfs Error!\r\n");
	delay_ms(200);
  }
  printf("FATFS OK!\r\n");
  printf("Flash Total Size:  %d MB\r\n",total>>10);
  printf("Flash Free  Size:  %d MB\r\n",free>>10);
  
  
  
===========================================================================================
//SPI4 test
//  		连线：MISO -  MISO   ！！！！！！！！！！！！！！！！！
// 			MOSI - MOSI  ！！！！！！！！！！！！！！！！！
//			 接线是反的，注意了！（）（）（）（）
//  uint8_t txDat=0xAC,rxDat=0xFF;
//  while(1)
//    {
//      txDat++;
//      CLR_SPI_CS();
//      HAL_SPI_TransmitReceive(&hspi4,&txDat,&rxDat,1,0x10);
//      SET_SPI_CS();
//      printf("rxDat:%d\r\n",rxDat);
//      HAL_Delay(1000);
//    }
========================================================================================
//// RFID Test
//   u8 RFID_ID_CODE[4]={0};
//
//   RCC522_Init();
//    while(1)
//      {
//	RFID_Get_ID(RFID_ID_CODE);
//	printf("RFID_ID_CODE:%x%x%x%x\r\n",RFID_ID_CODE[0],RFID_ID_CODE[1],RFID_ID_CODE[2],RFID_ID_CODE[3]);
//	memset(RFID_ID_CODE,0,4);
//	HAL_Delay(1000);
//      }




========================================================================================
// w25q+Pay test
//// w25qxx+Pay test
////  DelAllUser(0);
//  UserTblInit(0);
//
//  PayRecord_t Auser1={0x00ACCAFF,0,0,500},
//	      Auser2={0x12125678,0,0,300};
//
//  AddUser(&Auser1);
//  AddUser(&Auser2);
////  DelAllUser(0);
//  CheckUser(&Auser2);
//  CostUser(&Auser2,20);
//
//  uint8_t Spi_Table_Buffer[4096]={0};
//  uint8_t Spi_User_Buffer[4096]={0};
//  W25QXX_Read(Spi_Table_Buffer,0,4096);
//  W25QXX_Read(Spi_User_Buffer,Auser2.Addr,4096);
================     spi 5 test     ==================
//    uint8_t Spi_Wtite_Buffer[4096]={0};
//    uint8_t Spi_Read_Buffer[4096]={0};
//    for (uint32_t i =0;i<4096;i++)
//      Spi_Wtite_Buffer[i] = i%255;
//    W25QXX_Write(Spi_Wtite_Buffer,0,4096);
//    W25QXX_Read(Spi_Read_Buffer,0,4096);
//
//    for(uint32_t i=0;i<4096;i++)
//    {
//      printf("%d ",Spi_Read_Buffer[i]);
//      if(i%16 == 0)
//	printf("\r\n");
//    }


====================================================================================================
// ltdc test
//draw user page 480X504	24号字体
//   (0,0)		(480,0)
//  ------		卡号：
//  |	 |		姓名：
//  |	 |		年级：
//  ------		专业：
//			余额：
//		本次消费金额：
//  扫码支付		刷卡支付
//   (0,504)		(480,504)

//  pic:（25-145，195）
#define PIC_SX		35
#define PIC_SY		60
#define PIC_WIDTH	130	//占用最大宽度PIC_SX+PIC_WIDTH不要超过 MSG_SX
#define PIC_HEIGHT	190

#define MSG_FONT	24
#define MSG_SX		200
#define MSG_SY		(PIC_SY)
#define MSG_LINESPACE	12
#define MSGn_SX(n)	MSG_SX
#define MSGn_SY(n)	(MSG_SY+(MSG_LINESPACE+MSG_FONT)*(n-1))
   char lcd_id[12];
   sprintf((char*)lcd_id,"LCD ID:7084");
   printf("%s\r\n",lcd_id);
   LTDC_Clear(BG_COLOR);

   LTDC_Fill(PIC_SX,PIC_SY,PIC_SX+PIC_WIDTH,PIC_SY+PIC_HEIGHT,WHITE);
   POINT_COLOR=BLACK;BACK_COLOR=BG_COLOR;
   Show_Str(MSGn_SX(1),MSGn_SY(1),480-MSG_SX,MSG_FONT,"卡号：",MSG_FONT,0);
   Show_Str(MSGn_SX(2),MSGn_SY(2),480-MSG_SX,MSG_FONT,"姓名：",MSG_FONT,0);
   Show_Str(MSGn_SX(3),MSGn_SY(3),480-MSG_SX,MSG_FONT,"年级：",MSG_FONT,0);
   Show_Str(MSGn_SX(4),MSGn_SY(4),480-MSG_SX,MSG_FONT,"专业：",MSG_FONT,0);
   Show_Str(MSGn_SX(5),MSGn_SY(5),480-MSG_SX,MSG_FONT,"余额：          元",MSG_FONT,0);
   Show_Str(30,280,480-30,32,"请输入消费金额：      元",32,0);

   POINT_COLOR=BLACK;BACK_COLOR=GRAY;
//   LTDC_Fill(120-40,380-25,120+40,380+25,GRAY);
//   LTDC_Fill(240-40,380-25,120+40,380+25,GRAY);
   Show_Str(120-24*2,(PIC_SY+PIC_HEIGHT+504)/2,24*4,24,"扫码支付",24,0);
   Show_Str(360-24*2,(PIC_SY+PIC_HEIGHT+504)/2,24*4,24,"刷卡支付",24,0);
//   LTDC_ShowString(10,110,240,16,16,"ATOM@ALIENTEK");
//   LTDC_ShowString(10,150,240,12,12,"2019/2/1");
//   Show_Str(30,230,300,16,"汉字一二三，无聊六六期阿萨德",16,0);

//===================    softkbd  =================
//===================    继续添加触摸屏功能	===
#define SOFT_KBD_LINECOLOR	0x001F	//blue
#define SOFT_KBD_FILLCOLOR	0xFFFF	//whiite
#define LINE_WIDTH		4
#define XPOSI(n)		(60+((n-1)%4)*120)
#define YPOSI(n)		(540+(n-1)/4*74)
#define FONTSIZE		32
//draw keyboard 480X296
//   (0,800-296)		(480,800-296)
//       296/4
//   (0,800-0)	480/4	(480,800-0)
    LTDC_Fill(0,800-1-296,480-1,800-1,SOFT_KBD_FILLCOLOR);				//fill必须从上到下，左到右
    LTDC_DrawLine(0,800-1-296,480-1,800-1-296,LINE_WIDTH,SOFT_KBD_LINECOLOR);		//horizon
    LTDC_DrawLine(0,800-1-296+74*1,480-1,800-1-296+74*1,LINE_WIDTH,SOFT_KBD_LINECOLOR);
    LTDC_DrawLine(0,800-1-296+74*2,480-1,800-1-296+74*2,LINE_WIDTH,SOFT_KBD_LINECOLOR);
    LTDC_DrawLine(0,800-1-296+74*3,480-1,800-1-296+74*3,LINE_WIDTH,SOFT_KBD_LINECOLOR);
    LTDC_DrawLine(0+120,800-1,0+120,800-1-296,LINE_WIDTH,SOFT_KBD_LINECOLOR);		//vercital
    LTDC_DrawLine(0+120*2,800-1,0+120*2,800-1-296,LINE_WIDTH,SOFT_KBD_LINECOLOR);
    LTDC_DrawLine(0+120*3,800-1,0+120*3,800-1-296,LINE_WIDTH,SOFT_KBD_LINECOLOR);

    POINT_COLOR=BLACK;BACK_COLOR=WHITE;
    Show_Str((XPOSI(1)-FONTSIZE/4),(YPOSI(1)-FONTSIZE/2),FONTSIZE,FONTSIZE,"1",FONTSIZE,0);
    Show_Str((XPOSI(2)-FONTSIZE/4),(YPOSI(2)-FONTSIZE/2),FONTSIZE,FONTSIZE,"2",FONTSIZE,0);
    Show_Str((XPOSI(3)-FONTSIZE/4),(YPOSI(3)-FONTSIZE/2),FONTSIZE,FONTSIZE,"3",FONTSIZE,0);
    Show_Str((XPOSI(5)-FONTSIZE/4),(YPOSI(5)-FONTSIZE/2),FONTSIZE,FONTSIZE,"4",FONTSIZE,0);
    Show_Str((XPOSI(6)-FONTSIZE/4),(YPOSI(6)-FONTSIZE/2),FONTSIZE,FONTSIZE,"5",FONTSIZE,0);
    Show_Str((XPOSI(7)-FONTSIZE/4),(YPOSI(7)-FONTSIZE/2),FONTSIZE,FONTSIZE,"6",FONTSIZE,0);
    Show_Str((XPOSI(9)-FONTSIZE/4),(YPOSI(9)-FONTSIZE/2),FONTSIZE,FONTSIZE,"7",FONTSIZE,0);
    Show_Str((XPOSI(10)-FONTSIZE/4),(YPOSI(10)-FONTSIZE/2),FONTSIZE,FONTSIZE,"8",FONTSIZE,0);
    Show_Str((XPOSI(11)-FONTSIZE/4),(YPOSI(11)-FONTSIZE/2),FONTSIZE,FONTSIZE,"9",FONTSIZE,0);
    Show_Str((XPOSI(13)-FONTSIZE/4),(YPOSI(13)-FONTSIZE/2),FONTSIZE,FONTSIZE,"0",FONTSIZE,0);
    Show_Str((XPOSI(14)-FONTSIZE/4),(YPOSI(14)-FONTSIZE/2),FONTSIZE,FONTSIZE,".",FONTSIZE,0);
    POINT_COLOR=BROWN;
    Show_Str((XPOSI(4)-FONTSIZE),(YPOSI(4)-FONTSIZE/2),FONTSIZE*2,FONTSIZE,"查询",FONTSIZE,0);
    Show_Str((XPOSI(8)-FONTSIZE),(YPOSI(8)-FONTSIZE/2),FONTSIZE*2,FONTSIZE,"设置",FONTSIZE,0);
    Show_Str((XPOSI(12)-FONTSIZE),(YPOSI(12)-FONTSIZE/2),FONTSIZE*2,FONTSIZE,"取消",FONTSIZE,0);
    Show_Str((XPOSI(15)-FONTSIZE/2),(YPOSI(15)-FONTSIZE/2),FONTSIZE,FONTSIZE,"←",FONTSIZE,0);
    Show_Str((XPOSI(16)-FONTSIZE),(YPOSI(16)-FONTSIZE/2),FONTSIZE*2,FONTSIZE,"确定",FONTSIZE,0);

  uint32_t x=0,LCDswitch=0;
   while(1)
  {
       //画直线 == 画矩形 == LTDC_Fill 矩形单色填充
//       LTDC_DrawLine
       if(LCDswitch == 1)
	 LTDC_Switch(0);
       if(LCDswitch == 2)
	 LTDC_Switch(1);
       x++;
       if(x==12)x=0;
       toggleLed(0);
       HAL_Delay(1000);
   }




====================================================================================================
//  key_scan test
//  int keyvalue=0;
//  while(1)
//    {
//      keyvalue = key_scan();
//      if(keyvalue!=0xff)
//	printf("keyvalue:%d\r\n",keyvalue);
//      OSDelay_ms(35);
//    }




====================================================================================================
//// HMI test
//  HMI_Init();
//  SendPay(12,2);
//  SendRemain(123,9);
//  SendQRcode("https://www.baidu.com/",sizeof("https://www.baidu.com/"));
//  while(1)
//    {
//      HAL_Delay(1000);
//      DisplayQRCode();
//      HAL_Delay(1000);
//      HideQRCode();
//      HAL_Delay(1000);
//      HidePay();
//      HAL_Delay(1000);
//      DisplayPay();
//    }
  while(1)
  {
//	  DisplayCostOK_WHITE();		//支付成功闪烁-白
//	  HAL_Delay(1000);
//	  DisplayCostOK_BLACK();		//支付成功闪烁-黑
//	  HAL_Delay(1000);
//	  HideCostOK();					//隐藏字符
//	  HAL_Delay(500);
//	  DisplayCostFail_WHITE(1);		//支付失败闪烁-白，参数为错误类型
//	  HAL_Delay(1000);
//	  DisplayCostFail_BLACK(0);		//支付失败闪烁-黑，参数为错误类型
//	  HAL_Delay(1000);
//	  HideCostFail();				//隐藏字符
//	  HAL_Delay(1000);

//	  SendQRcode("https://translate.google.cn/",sizeof("https://translate.google.cn/"));
//	  HAL_Delay(1000);
//	  HideQRCode();
//	  HAL_Delay(1000);

  }


====================================================================================================
//BY8301 test
//  uint8_t voiceList[10]={21,22,23,14,15,16,17,18,19,20};
//  while (1)
//    {
//      ContinuePlay(voiceList,3);
//      HAL_Delay(8000);
////      SinglePlay(2);
//    }